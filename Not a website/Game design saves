save game design scripts

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PLayerController : MonoBehaviour {

	public float moveSpeed;
	public Rigidbody rb;
	public float jumpForce = 250f;
	public Transform firePoint;
	public GameObject fireBall;
	public bool isfacingRight;
	public GameObject thefirePoint;
	public GameObject swordArm;
	public Transform swordPoint;
	public GameObject swordController;

	public Sprite walk;
	public Sprite jump;
	public Sprite melee;

	private SpriteRenderer spriteRenderer;

	private bool isGrounded;
	private SpriteRenderer mySpriteRenderer;
	private FireBall directionScript;
	private firePointScript pointPositioinScript;
	private SwordController meleeScript;

	private float meleeTime = 0.5f;
	private float timer;
	private float lastTimer;

	private bool currentlyMelee;

	private void Awake()
	{
		mySpriteRenderer = GetComponent<SpriteRenderer>();
		directionScript = fireBall.GetComponent<FireBall>();
		pointPositioinScript = thefirePoint.GetComponent<firePointScript>();
		meleeScript = swordController.GetComponent<SwordController>();

	}

	void Start () {
		isfacingRight = true;
		timer = 0f;
		currentlyMelee = false;
		lastTimer = 0f;

		spriteRenderer = GetComponent<SpriteRenderer>();
		if (spriteRenderer.sprite == null) {
			spriteRenderer.sprite = walk;
		}

	}

	void Update () {
		Vector3 totalMovement = Vector3.zero;

		if (Input.GetKey ("d")) {
			totalMovement += transform.right * moveSpeed;
			mySpriteRenderer.flipX = false;
			//Debug.Log ("changed to right");
			isfacingRight = true;
			pointPositioinScript.fireRight = true;
			meleeScript.swingFacingRight = true;

		}
		if (Input.GetKey("a")) {
			totalMovement -= transform.right * moveSpeed;
			mySpriteRenderer.flipX = true;
			//Debug.Log ("changed to LEFT");
			isfacingRight = false;
			pointPositioinScript.fireRight = false;
			meleeScript.swingFacingRight = false;
		}

		if (currentlyMelee == false) {
			if (Input.GetKeyDown ("w")) {
				if (isGrounded == true) {
					rb.velocity = transform.up * jumpForce;
				}
			}
		}

		if (currentlyMelee == false) {
			if (Input.GetKeyDown ("space")) {
				if (isfacingRight == true) {
					directionScript.facingRight = true;
				}
				if (isfacingRight == false) {
					directionScript.facingRight = false;
				}
				if (isGrounded == true) {
					Shoot ();
				}
			}
		}
		if (isGrounded == true){
			if (currentlyMelee == false) {
				if (Input.GetKeyDown ("s")) {
					currentlyMelee = true;
					Melee ();
				}
			}
		}

		if (currentlyMelee == false) {
			if (isGrounded == true) {
				spriteRenderer.sprite = walk;
			}
		}
		if (isGrounded == false) {
			spriteRenderer.sprite = jump;
		}

		lastTimer = Time.time;
		//Debug.Log (Time.time);
		if (lastTimer > timer) {
			//Debug.Log ("after melee");
			meleeScript.swordSwing = false;
			currentlyMelee = false;
		}

		rb.MovePosition(transform.position + totalMovement.normalized * moveSpeed * Time.deltaTime);
	}

	void OnTriggerEnter(Collider other){
		if(other.tag == "Ground"){
			isGrounded = true;
			Debug.Log ("Grounded");
		}
	}

	void OnTriggerExit(Collider other){
		if(other.tag == "Ground"){
			isGrounded = false;
			Debug.Log ("Not Grounded");
		}
	}

	void OnCollisionEnter(Collision other) {
		if (other.gameObject.tag == "Enemy") {
			Destroy(gameObject);
		}
	}

	void Shoot () {
		Instantiate (fireBall, firePoint.position, firePoint.rotation);
	}

	void Melee () {
		spriteRenderer.sprite = melee;
		meleeScript.swordSwing = true;
		timer = Time.time + meleeTime;
		//Debug.Log ("timer = " + timer);
	}
}


using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class SwordController : MonoBehaviour {

	public bool swordSwing;
	public bool swingFacingRight;
	public Renderer rend;
	public float rotateSpeed = 10f;


	void Start () {
		swingFacingRight = true;

		rend = GetComponent<Renderer>();
		rend.enabled = false;
	}

	void Update () {

		if (swingFacingRight == true) {
			transform.localPosition = new Vector3(0.50f, 0.22f, -0.5f);
		}
		if (swingFacingRight == false) {
			transform.localPosition = new Vector3(-0.50f, 0.22f, -0.5f);
		}

		if (swordSwing == true) {
			Debug.Log ("Swung");
			rend.enabled = true;
			if (swingFacingRight == true) {
				transform.Rotate (0f, 0f, -1f * rotateSpeed, Space.Self);
			} else {
				transform.Rotate (0f, 0f, 1f * rotateSpeed, Space.Self);
			}


		} else {
			rend.enabled = false;
			transform.eulerAngles = new Vector3(0, 0, -90);
		}
	}
}


using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class FireBall : MonoBehaviour {

	public float fireSpeed = 20f;
	public bool facingRight;
	public Rigidbody rb;


	void Awake () {

	}

	void Start () {
		//Debug.Log ("Facing right " + facingRight);
		if (facingRight == true) {
			rb.velocity += transform.right * fireSpeed;
		}
		if (facingRight == false) {
			rb.velocity -= transform.right * fireSpeed;
		}
	}

	void update () {

	}
}


using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class firePointScript : MonoBehaviour {

	public bool fireRight;

	void Update () {
		if (fireRight == true) {
			transform.localPosition = new Vector3(1.17f, 0.56f, 0f);
		}
		if (fireRight == false) {
			transform.localPosition = new Vector3(-1.17f, 0.56f, 0f);
		}
	}
}




using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class SlimeController : MonoBehaviour {

	public GameObject rightDetector;
	public GameObject leftDetector;

	public bool rD;
	public bool lD;

	public float moveSpeed;
	public float moveSpeedLeft;
	public float jumpForce;

	public Rigidbody rb;

	public bool triggeredGround;

	public Sprite walk;
	public Sprite jump;

	private bool isGrounded;

	private SpriteRenderer mySpriteRenderer;

	void Awake () {
		mySpriteRenderer = GetComponent<SpriteRenderer>();
	}

	void Start () {
		rD = false;
		lD = false;
	}

	void Update () {
		//Debug.Log ("right detector = " + rD);
		//Debug.Log ("left detector = " + lD);


		if (isGrounded == true) {
			if (rD == true) {
				rb.AddForce(new Vector3(moveSpeed, jumpForce, 0) * jumpForce);
			}
			if (lD == true) {
				rb.AddForce(new Vector3(moveSpeedLeft, jumpForce, 0) * jumpForce);
			}
		}

		if (isGrounded == true) {
			mySpriteRenderer.sprite = walk;
		}
		if (isGrounded == false) {
			mySpriteRenderer.sprite = jump;
		}


	}

	void OnTriggerEnter(Collider other){
		if (other.tag == "Ground"){
			isGrounded = true;
			//Debug.Log ("Grounded");
		}

		if (other.tag == "FireBall") {
			Destroy(gameObject);
		}
	}

	void OnTriggerExit(Collider other){
		if (other.tag == "Ground"){
			isGrounded = false;
			//Debug.Log ("Not Grounded");
		}
	}
}




using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class rdScript : MonoBehaviour {

	public GameObject rightDetector;

	private SlimeController detectRightTrigger;

	private void Awake () {
		detectRightTrigger = rightDetector.GetComponent<SlimeController> ();
	}

	void OnTriggerEnter(Collider other) {
		if (other.tag == "Player") {
			detectRightTrigger.rD = true;
			Debug.Log ("RIGHT TRIGGER ENTER");
		}
	}

	void OnTriggerExit(Collider other) {
		if (other.tag == "Player") {
			detectRightTrigger.rD = false;
		}

		if (other.tag == "Ground") {
			detectRightTrigger.triggeredGround = false;
		}
	}
}




using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class ldScript : MonoBehaviour {

	public GameObject leftDetector;


	private SlimeController detectLeftTrigger;

	private void Awake () {
		detectLeftTrigger = leftDetector.GetComponent<SlimeController> ();
	}

	void OnTriggerEnter(Collider other) {
		if (other.tag == "Player") {
			detectLeftTrigger.lD = true;
			Debug.Log ("LEFT TRIGGER ENTER");
		}
	}

	void OnTriggerExit(Collider other) {
		if (other.tag == "Player") {
			detectLeftTrigger.lD = false;
		}

		if (other.tag == "Ground") {
			detectLeftTrigger.triggeredGround = false;
		}
	}
}
